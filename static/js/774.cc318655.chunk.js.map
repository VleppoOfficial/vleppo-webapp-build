{"version":3,"file":"static/js/774.cc318655.chunk.js","mappings":"8LAgBA,IAbkB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAaC,GAAY,YACnD,OACE,UAAC,KAAD,kBAAgBA,GAAhB,IAAuBC,WAAY,IAAKC,OAAK,QAAIC,SAAU,SAAYH,GAAvE,UACGF,EADH,OAEGC,IACC,SAAC,IAAD,CAAYK,UAAU,OAAOC,GAAI,CAAEC,MAAO,OAA1C,qB,uFCWR,IAhBa,SAAC,GAAuC,IAAD,IAApCC,MAAAA,OAAoC,MAA5B,GAA4B,EAAxBC,EAAwB,EAAxBA,SAAaC,GAAW,YAClD,OACE,mCAASA,GAAT,eACE,SAAC,IAAD,WACE,2BAAQF,MAETC,Q,wPCyEP,UAzEsB,WACpB,OAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoEC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,SAA/FC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,cAAeC,EAA5C,EAA4CA,WAAYC,EAAxD,EAAwDA,SAExDC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,IAAW,CAACC,KAAM,OAC1B,CAACb,IAUJ,OACE,SAAC,IAAD,CAAMN,MAAM,0BAAZ,UACE,UAAC,IAAD,CAAWoB,SAAS,KAApB,WACE,UAAC,IAAD,CAAKC,QAAQ,OAAOC,WAAW,SAA/B,WACE,SAAC,IAAD,CAAY3B,MAAO,CAAC4B,SAAS,GAAIC,cAAY,EAACC,QAAQ,KAAK5B,UAAU,MAAMC,GAAI,CAAE4B,GAAI,GAArF,4BAGA,UAAC,IAAD,CAAKL,QAAQ,OAAOC,WAAW,SAA/B,WACE,SAAC,IAAD,CAAWK,aAAc,EAAGpC,MAAM,YAClC,SAAC,IAAD,CACEqC,WAAS,EACTC,KAAK,QACLC,OAAO,QACPC,KAAK,SACLpC,MAAO,CAACmC,OAAQ,UAChBE,SAAU,SAACC,GAAD,OAAM5B,EAAgB4B,EAAEC,OAAOC,WAE3C,SAAC,IAAD,CAAQV,QAAQ,YAAYW,QAAS,kBArBzBC,EAqB4CjC,OApBhEE,GAASY,EAAAA,EAAAA,IAAW,CAACC,KAAM,EAAGmB,KAAMD,KADjB,IAACA,GAqBZ,2BAGJ,UAAC,IAAD,CAAgBxC,UAAW0C,EAAAA,EAAOzC,GAAI,CAAE0C,GAAI,GAA5C,UACGxB,IAAW,SAAC,IAAD,KACZ,UAAC,IAAD,CAAOlB,GAAI,CAAEF,SAAU,KAAO,aAAW,eAAzC,WACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,IAAD,CAAW6C,MAAM,QAAjB,qBACA,SAAC,IAAD,CAAWA,MAAM,QAAjB,gCACA,SAAC,IAAD,CAAWA,MAAM,QAAjB,mBACA,SAAC,IAAD,CAAWA,MAAM,gBAGrB,SAAC,IAAD,UACG7B,EAAO8B,KAAI,SAACC,GAAD,OACV,UAAC,IAAD,CAAuB7C,GAAI,CAAE,mCAAoC,CAAE8C,OAAQ,IAA3E,WACE,SAAC,IAAD,CAAW/C,UAAU,KAAKgD,MAAM,MAAhC,SACGF,EAAEL,QAEL,SAAC,IAAD,CAAWG,MAAM,QAAjB,SAA0BE,EAAEG,UAC5B,SAAC,IAAD,CAAWL,MAAM,QAAjB,SAA0BE,EAAEI,sBAC5B,SAAC,IAAD,CAAWN,MAAM,QAAjB,SAA0BE,EAAEd,QAC5B,SAAC,IAAD,CAAWY,MAAM,QAAjB,UACE,SAAC,KAAD,CAAMO,GAAE,iCAA4BL,EAAEL,MAAtC,sBARWK,EAAEL,eAcvB,SAAC,IAAD,CAAiBW,mBAAoB,GAAIpD,UAAU,MAAMqD,MAAOrC,EAAasC,YAAarC,EAAeK,KAAMJ,EAAYqC,aAxD1G,SAACC,EAAOlC,GAC/Bb,GAASY,EAAAA,EAAAA,IAAW,CAACC,KAAMA","sources":["components/FormLabel.js","components/Page.js","views/block-explorer/index.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst FormLabel = ({ label, required, ...props }) => {\n  return (\n    <Typography {...props} fontWeight={500} style={{ minWidth: '140px', ...props }}>\n      {label}&nbsp;\n      {required && (\n        <Typography component=\"span\" sx={{ color: 'red' }}>\n          *\n        </Typography>\n      )}\n    </Typography>\n  );\n};\n\nexport default FormLabel;\n","import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ title = '', children, ...rest }) => {\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect, useState } from 'react';\nimport { Button, Box, TextField, Container, Typography, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination, LinearProgress } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'src/store';\nimport { loadBlocks } from 'src/store/slices/slate/block';\n\nimport FormLabel from 'src/components/FormLabel';\n\nconst BlockExplorer = () => {\n  const [searchString, setSearchString] = useState();\n  const dispatch = useDispatch();\n\n  const { blocks, blocksCount, blocksPerPage, blocksPage, loading } = useSelector((state) => state.slate.block);\n\n  useEffect(() => {\n    dispatch(loadBlocks({page: 0}));\n  }, [dispatch]);\n\n  const handleChangePage = (event, page) => {\n    dispatch(loadBlocks({page: page}));\n  };\n\n  const handleSearch = (str) => {\n    dispatch(loadBlocks({page: 0, hash: str}))\n  }\n  \n  return (\n    <Page title=\"Blocks - Block Explorer\">\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography style={{flexGrow:1}} gutterBottom variant=\"h5\" component=\"div\" sx={{ mt: 2 }}>\n            Latest blocks\n          </Typography>\n          <Box display=\"flex\" alignItems=\"center\">\n            <FormLabel marginBottom={0} label=\"Search\" />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"dense\"\n              name=\"search\"\n              style={{margin: '0 12px'}}\n              onChange={(e)=> setSearchString(e.target.value)}\n            />\n            <Button variant=\"contained\" onClick={() => handleSearch(searchString)}>Search</Button>\n          </Box>\n        </Box>\n        <TableContainer component={Paper} sx={{ my: 2 }}>\n          {loading && <LinearProgress />}\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Hash</TableCell>\n                <TableCell align=\"right\">Height</TableCell>\n                <TableCell align=\"right\">Transaction Count</TableCell>\n                <TableCell align=\"right\">Size</TableCell>\n                <TableCell align=\"right\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {blocks.map((b) => (\n                <TableRow key={b.hash} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {b.hash}\n                  </TableCell>\n                  <TableCell align=\"right\">{b.height}</TableCell>\n                  <TableCell align=\"right\">{b.transaction_counts}</TableCell>\n                  <TableCell align=\"right\">{b.size}</TableCell>\n                  <TableCell align=\"right\">\n                    <Link to={`/block-explorer/blocks/${b.hash}`}>View</Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination rowsPerPageOptions={[]} component=\"div\" count={blocksCount} rowsPerPage={blocksPerPage} page={blocksPage} onPageChange={handleChangePage} />\n        </TableContainer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default BlockExplorer;\n"],"names":["label","required","props","fontWeight","style","minWidth","component","sx","color","title","children","rest","useState","searchString","setSearchString","dispatch","useDispatch","useSelector","state","slate","block","blocks","blocksCount","blocksPerPage","blocksPage","loading","useEffect","loadBlocks","page","maxWidth","display","alignItems","flexGrow","gutterBottom","variant","mt","marginBottom","fullWidth","size","margin","name","onChange","e","target","value","onClick","str","hash","Paper","my","align","map","b","border","scope","height","transaction_counts","to","rowsPerPageOptions","count","rowsPerPage","onPageChange","event"],"sourceRoot":""}