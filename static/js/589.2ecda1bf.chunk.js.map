{"version":3,"file":"static/js/589.2ecda1bf.chunk.js","mappings":"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","sources":["components/Alert.js","components/FormControlWrapper.js","components/FormLabel.js","components/Page.js","views/auth/RegisterView/index.js"],"sourcesContent":["import { Box, Typography, Button, Modal } from '@mui/material';\nimport { history } from 'src/utils/history';\n\nconst style = {\n  modal: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    p: 4,\n    borderRadius: '6px',\n  }\n}\n\nconst Alert = ({ open, setOpen, message, error, redirect }) => {\n  function handleClose() {\n    setOpen(false)\n    if (redirect) {\n      history.push(redirect);\n    }\n  }\n  return (\n    <Modal\n      open={open}\n      // onClose={() => setOpen(false)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style.modal}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" textAlign={'center'}>\n          NOTIFICATION\n        </Typography>\n        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center'}} mb={5} mt={2}>\n          {\n            error ? '' : <img src={require('src/assets/images/success.jpg')} alt=\"success.jpg\" style={{marginRight: '8px', width: '30px', height: '30px' }} />\n          }\n          <Typography id=\"modal-modal-description\" > {message ? message : 'Submitted successfully'} </Typography>\n        </Box>\n        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center'}} >\n          <Button variant=\"contained\" sx={{ width: '50%' }} type=\"submit\" onClick={() => handleClose()}>\n            Continue\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default Alert;\n","import React from 'react';\nimport { Box } from '@mui/material';\n\nconst FormControlWrapper = ({ children, ...props }) => {\n  return (\n    <Box {...props} sx={{ width: '100%', ...props }}>\n      {children}\n    </Box>\n  );\n};\n\nexport default FormControlWrapper;\n","import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst FormLabel = ({ label, required, ...props }) => {\n  return (\n    <Typography {...props} fontWeight={500} style={{ minWidth: '140px', ...props }}>\n      {label}&nbsp;\n      {required && (\n        <Typography component=\"span\" sx={{ color: 'red' }}>\n          *\n        </Typography>\n      )}\n    </Typography>\n  );\n};\n\nexport default FormLabel;\n","import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ title = '', children, ...rest }) => {\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useState } from 'react';\nimport { Grid, TextField, Typography, Box, Link, InputAdornment, IconButton, Checkbox, FormControlLabel, Select, MenuItem, InputBase, Card } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { VisibilityOutlined, VisibilityOffOutlined } from '@mui/icons-material';\nimport FormControlWrapper from 'src/components/FormControlWrapper';\nimport { styled, css } from '@mui/material/styles';\nimport { Formik } from 'formik';\nimport DatePicker from '@mui/lab/DatePicker';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'src/store';\nimport { Redirect, useLocation, Link as RouterLink } from 'react-router-dom';\nimport FormLabel from 'src/components/FormLabel';\nimport useAuth from 'src/hooks/useAuth';\nimport Page from 'src/components/Page';\n// import _ from 'lodash';\nimport countries from 'src/assets/json/country.json';\nimport { register } from 'src/store/slices/auth';\nimport countryPhones from 'src/assets/json/countryPhone.json';\nimport Alert from 'src/components/Alert'\n\nconst RegisterBox = styled(Card)(({theme}) => ({\n    width: '100%',\n    maxWidth: 1024,\n    margin: '3rem 0',\n    padding: '4rem 4rem',\n    borderRadius: '0.5rem'\n}))\nconst style = {\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  textRed: {\n    color: 'red'\n  },\n  selectPadding: {\n    padding: '0',\n    margin: '0'\n  }\n};\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3)\n  },\n  '& .MuiInputBase-input': {\n    marginTop: '6px',\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '8px 26px 8px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}));\n\nconst LoginView = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const [dob, setDob] = React.useState(null);\n  const [country, setCountry] = React.useState('');\n  const [agree, setAgree] = React.useState(false);\n  const [countryPhone, setCountryPhone] = React.useState('');\n  const { isAuthenticated } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRePassword, setShowRePassword] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [alertError, setAlertError] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [day, mnth, date.getFullYear()].join(\"/\");\n  }\n\n  if (isAuthenticated !== null && isAuthenticated === true) {\n    const system = location.pathname.split('/')[1];\n    const returnUrl = new URLSearchParams(location.search).get('returnUrl');\n    return returnUrl ? <Redirect to={returnUrl} /> : <Redirect to={`/${system}`} />;\n  }\n\n  return (\n    <Page title=\"Register New Account\">\n      <Grid container sx={{ height: '100vh' }}>\n        <Grid item xs={12} sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <RegisterBox>\n            <Formik\n              initialValues={{\n                address: '',\n                admin: false,\n                // country: '',\n                // dob: '',\n                // phone_country_code: '',\n                email: '',\n                first_name: '',\n                last_name: '',\n                phone: '',\n                state: '',\n                username: '',\n                password: '',\n                repeatpassword: ''\n              }}\n              validationSchema={Yup.object().shape({\n                username: Yup.string().required('User name is required'),\n                email: Yup.string().required('Email is required'),\n                first_name: Yup.string().required('First name is required'),\n                last_name: Yup.string().required('Last name is required'),\n                password: Yup.string().required('Password is required'),\n                repeatpassword: Yup.string().required('Repeat password is required')\n              })}\n              onSubmit={async (values, { setSubmitting }) => {\n                try {\n                  const params = {\n                    ...values,\n                    dob: convert(dob),\n                    country: country,\n                    phone_country_code: countryPhone\n                  }\n                  if (values.password !== values.repeatpassword) {\n                    setOpen(true)\n                    setAlertError(true)\n                    setAlertMessage('Repeat password not match with the password')\n                    return false\n                  }\n                  dispatch(register(params)).then(() => {\n                    setSubmitting(false);\n                  });\n                } catch (err) {\n                  setAlertError(true)\n                  setAlertMessage('Something wrong, please try again later!')\n                  setOpen(true)\n                }\n              }}\n            >\n              {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form onSubmit={handleSubmit}>\n                  <Typography variant=\"h5\" component=\"div\" style={style.fontWeightBold} align=\"center\" marginBottom=\"32px\">\n                    Register New Account\n                  </Typography>\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"User name\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        error={Boolean(touched.username && errors.username)}\n                        helperText={touched.username && errors.username}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.username}\n                      />\n                    </FormControlWrapper>\n                    <FormControlWrapper marginLeft={5}>\n                      <FormLabel label=\"Email\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        error={Boolean(touched.email && errors.email)}\n                        helperText={touched.email && errors.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.email}\n                      />\n                    </FormControlWrapper>\n                  </Box>\n\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"First name\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"first_name\"\n                        placeholder=\"First name\"\n                        error={Boolean(touched.first_name && errors.first_name)}\n                        helperText={touched.first_name && errors.first_name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.first_name}\n                      />\n                    </FormControlWrapper>\n                    <FormControlWrapper marginLeft={5}>\n                      <FormLabel label=\"Last name\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"last_name\"\n                        placeholder=\"Last name\"\n                        error={Boolean(touched.last_name && errors.last_name)}\n                        helperText={touched.last_name && errors.last_name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.last_name}\n                      />\n                    </FormControlWrapper>\n                  </Box>\n\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Date of birth\" />\n                      <DatePicker\n                        value={dob}\n                        onChange={(newDob) => {\n                          setDob(newDob);\n                        }}\n                        renderInput={(params) => <TextField fullWidth size=\"small\" {...params} />}\n                      />\n                      {/* <TextField fullWidth size=\"small\" margin=\"dense\" name=\"dob\" placeholder=\"Date of birth\" onBlur={handleBlur} onChange={handleChange} value={values.dob} /> */}\n                    </FormControlWrapper>\n\n                    <FormControlWrapper marginLeft={5}>\n                      <FormLabel label=\"Phone number\" />\n                      <Box sx={{ display: 'flex' }}>\n                        <Box sx={{ width: '80px' }} mr={2}>\n                          <Select\n                            value={countryPhone}\n                            onChange={(event) => {\n                              setCountryPhone(event.target.value);\n                            }}\n                            fullWidth\n                            input={<BootstrapInput />}\n                          >\n                            {countryPhones\n                              ? countryPhones.map((x) => {\n                                  return <MenuItem value={x.code} key={x.code}>{x.code}</MenuItem>;\n                                })\n                              : ''}\n                          </Select>\n                        </Box>\n                        <TextField fullWidth size=\"small\" margin=\"dense\" name=\"phone\" placeholder=\"Phone number\" onBlur={handleBlur} onChange={handleChange} value={values.phone} />\n                      </Box>\n                    </FormControlWrapper>\n                  </Box>\n                  <Box>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Address\" />\n                      <TextField fullWidth size=\"small\" margin=\"dense\" name=\"address\" placeholder=\"Address\" onBlur={handleBlur} onChange={handleChange} value={values.address} />\n                    </FormControlWrapper>\n                  </Box>\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"State\" />\n                      <TextField fullWidth size=\"small\" margin=\"dense\" name=\"state\" placeholder=\"State\" onBlur={handleBlur} onChange={handleChange} value={values.state} />\n                    </FormControlWrapper>\n                    <FormControlWrapper marginLeft={5}>\n                      <FormLabel label=\"Country\" />\n                      <Select\n                        value={country}\n                        onChange={(event) => {\n                          setCountry(event.target.value);\n                        }}\n                        fullWidth\n                        input={<BootstrapInput />}\n                      >\n                        {countries\n                          ? countries.map((x) => {\n                              return <MenuItem value={x.value} key={x.value}>{x.value}</MenuItem>;\n                            })\n                          : ''}\n                      </Select>\n                    </FormControlWrapper>\n                  </Box>\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Password\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        error={Boolean(touched.password && errors.password)}\n                        helperText={touched.password && errors.password}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.password}\n                        type={showPassword ? 'text' : 'password'}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton onClick={() => setShowPassword((showPassword) => !showPassword)}>\n                                {showPassword ? <VisibilityOffOutlined /> : <VisibilityOutlined />}\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    </FormControlWrapper>\n                    <FormControlWrapper marginLeft={5}>\n                      <FormLabel label=\"Repeat password\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"repeatpassword\"\n                        placeholder=\"Repeat password\"\n                        error={Boolean(touched.repeatpassword && errors.repeatpassword)}\n                        helperText={touched.repeatpassword && errors.repeatpassword}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.repeatpassword}\n                        type={showRePassword ? 'text' : 'password'}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton onClick={() => setShowRePassword((showRePassword) => !showRePassword)}>\n                                {showRePassword ? <VisibilityOffOutlined /> : <VisibilityOutlined />}\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    </FormControlWrapper>\n                  </Box>\n                  <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n                    <FormControlLabel\n                      checked={agree}\n                      value=\"end\"\n                      control={<Checkbox />}\n                      label=\"I agree to all the Term, Privacy Policy\"\n                      labelPlacement=\"end\"\n                      onChange={() => setAgree(!agree)}\n                    ></FormControlLabel>\n                  </Box>\n\n                  <Box mt={4} textAlign=\"center\">\n                    <LoadingButton variant=\"contained\" sx={{ width: '50%' }} type=\"submit\" loading={isSubmitting} disabled={!agree}>\n                      Create account\n                    </LoadingButton>\n                  </Box>\n\n                  <Box mt={1.5} textAlign=\"center\">\n                    <Typography component=\"span\">Already an account? </Typography>\n                    <Link component={RouterLink} to=\"/vleppo/login\">Login</Link>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </RegisterBox>\n        </Grid>\n      </Grid>\n      <Alert open={open} setOpen={ () => {setOpen(false)}} message={alertMessage} error={alertError} />\n    </Page>\n  );\n};\n\nexport default LoginView;\n"],"names":["style","modal","position","top","left","transform","width","bgcolor","p","borderRadius","open","setOpen","message","error","redirect","sx","id","variant","component","textAlign","display","alignItems","justifyContent","mb","mt","src","require","alt","marginRight","height","type","onClick","history","children","props","label","required","fontWeight","minWidth","color","title","rest","RegisterBox","styled","Card","theme","maxWidth","margin","padding","fontWeightBold","textRed","selectPadding","BootstrapInput","InputBase","marginTop","spacing","backgroundColor","palette","background","paper","border","fontSize","transition","transitions","create","fontFamily","join","borderColor","boxShadow","location","useLocation","dispatch","useDispatch","React","dob","setDob","country","setCountry","agree","setAgree","countryPhone","setCountryPhone","isAuthenticated","useAuth","useState","showPassword","setShowPassword","showRePassword","setShowRePassword","alertError","setAlertError","alertMessage","setAlertMessage","convert","str","date","Date","mnth","getMonth","slice","getDate","getFullYear","system","pathname","split","returnUrl","URLSearchParams","search","get","to","Page","Grid","container","item","xs","flexDirection","initialValues","address","admin","email","first_name","last_name","phone","state","username","password","repeatpassword","validationSchema","Yup","shape","onSubmit","values","setSubmitting","params","phone_country_code","register","then","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Typography","align","marginBottom","Box","FormControlWrapper","FormLabel","TextField","fullWidth","size","name","placeholder","Boolean","helperText","onBlur","onChange","value","marginLeft","DatePicker","newDob","renderInput","mr","Select","event","target","input","countryPhones","x","MenuItem","code","countries","InputProps","endAdornment","InputAdornment","IconButton","VisibilityOffOutlined","VisibilityOutlined","FormControlLabel","checked","control","Checkbox","labelPlacement","LoadingButton","loading","disabled","Link","RouterLink","Alert"],"sourceRoot":""}