{"version":3,"file":"static/js/623.82d2e3b5.chunk.js","mappings":"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","sources":["components/Alert.js","components/FormControlWrapper.js","components/FormLabel.js","components/Page.js","views/common/Contact.js"],"sourcesContent":["import { Box, Typography, Button, Modal } from '@mui/material';\nimport { history } from 'src/utils/history';\n\nconst style = {\n  modal: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    p: 4,\n    borderRadius: '6px',\n  }\n}\n\nconst Alert = ({ open, setOpen, message, error, redirect }) => {\n  function handleClose() {\n    setOpen(false)\n    if (redirect) {\n      history.push(redirect);\n    }\n  }\n  return (\n    <Modal\n      open={open}\n      // onClose={() => setOpen(false)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style.modal}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" textAlign={'center'}>\n          NOTIFICATION\n        </Typography>\n        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center'}} mb={5} mt={2}>\n          {\n            error ? '' : <img src={require('src/assets/images/success.jpg')} alt=\"success.jpg\" style={{marginRight: '8px', width: '30px', height: '30px' }} />\n          }\n          <Typography id=\"modal-modal-description\" > {message ? message : 'Submitted successfully'} </Typography>\n        </Box>\n        <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center'}} >\n          <Button variant=\"contained\" sx={{ width: '50%' }} type=\"submit\" onClick={() => handleClose()}>\n            Continue\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default Alert;\n","import React from 'react';\nimport { Box } from '@mui/material';\n\nconst FormControlWrapper = ({ children, marginLeft, marginRight }) => {\n  return (\n    <Box mt={3} sx={{ width: '100%' }} ml={marginLeft ? marginLeft : '0'} mr={marginRight ? marginRight : '0'}>\n      {children}\n    </Box>\n  );\n};\n\nexport default FormControlWrapper;\n","import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst FormLabel = ({ label, required, marginBottom }) => {\n  return (\n    <Typography marginBottom={marginBottom !== undefined ? marginBottom : 1} fontWeight={500}>\n      {label}&nbsp;\n      {required && (\n        <Typography component=\"span\" sx={{ color: 'red' }}>\n          *\n        </Typography>\n      )}\n    </Typography>\n  );\n};\n\nexport default FormLabel;\n","import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ title = '', children, ...rest }) => {\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, TextField, Typography, Box, Select, MenuItem, InputBase, TextareaAutosize } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport FormControlWrapper from 'src/components/FormControlWrapper';\nimport { styled, css } from '@mui/material/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormLabel from 'src/components/FormLabel';\nimport Page from 'src/components/Page';\nimport API from 'src/utils/api';\nimport Alert from 'src/components/Alert'\n\nconst ContactBox = styled(Box)(\n  () => css`\n    width: 100%;\n    max-width: 1024px;\n    background: white;\n    margin: 3rem 0;\n    padding: 4rem 4rem;\n    border-radius: 0.5rem;\n  `\n);\nconst style = {\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  textarea: {\n    marginTop: '6px',\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#fff',\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '8px 26px 8px 12px',\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    },\n    width: '100%',\n    resize: 'unset'\n  },\n};\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3)\n  },\n  '& .MuiInputBase-input': {\n    marginTop: '6px',\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '8px 26px 8px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}));\n\nconst LoginView = () => {\n  const [subject, setSubject] = useState('');\n  const [subjects, setSubjects] = useState('');\n  const [open, setOpen] = useState(false);\n  const [alertError, setAlertError] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  useEffect(() => {\n    try {\n      async function getSubject() {\n        const response = await API.get('support?support_type=1');\n        const newVal = response.data.data.map(x=>{\n          return {\n            ...x,\n            value: x.content.value,\n            lang_code: x.content.lang_code,\n          }\n        })\n        setSubjects(newVal);\n      }\n      getSubject();\n    } catch (err) {\n      console.log('Load profile KYC error', err)\n    }\n  }, []);\n\n  return (\n    <Page title=\"Register New Account\">\n      <Grid container sx={{ height: '100vh' }}>\n        <Grid item xs={12} sx={{ background: '#E5E5E5', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <ContactBox>\n            <Formik\n              enableReinitialize \n              initialValues={{\n                first_name: '',\n                last_name: '',\n                email: '',\n                message: '',\n                // content: ''\n              }}\n              // initialValues={{\n              //   address: '18 Cộng Hòa, Phường 14, Tân Bình',\n              //   admin: false,\n              //   country: 'Việt Nam',\n              //   dob: '30/4/1996',\n              //   email: 'shermeilove@gmail.com',\n              //   first_name: 'Nguyễn',\n              //   last_name: 'Quốc Huy',\n              //   phone: '0765655532',\n              //   phone_country_code: '+84',\n              //   state: 'Hồ Chí Minh',\n              //   username: 'shermeilove@gmail.com',\n              //   password: '123456',\n              //   repeatpassword: '123456',\n              // }}\n              validationSchema={Yup.object().shape({\n                first_name: Yup.string().required('First name is required'),\n                last_name: Yup.string().required('Last is required'),\n                email: Yup.string().required('Email is required'),\n                message: Yup.string().required('Message is required'),\n                // title: Yup.string().required('Subject is required'),\n              })}\n              onSubmit={async (values, { setSubmitting, setFieldValue }) => {\n                try {\n                  const params = {\n                    content: values.message,\n                    email: values.email,\n                    first_name: values.first_name,\n                    lang_code: subject.lang_code,\n                    last_name: values.last_name,\n                    support_id: subject.id\n                  }\n                  const response = await API.post('support-ticket', params, {headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                  }});\n                  if (response && response.status === 200) {\n                    setFieldValue('first_name', '')\n                    setFieldValue('last_name', '')\n                    setFieldValue('email', '')\n                    setFieldValue('message', '')\n                    setSubject('')\n                    setSubmitting(false)\n                    setOpen(true)\n                  }\n                } catch (error) {\n                  setAlertError(true)\n                  setAlertMessage('Something wrong, please try again later!')\n                  setOpen(true)\n                }\n              }}\n            >\n              {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form onSubmit={handleSubmit}>\n                  <Typography variant=\"h5\" component=\"div\" style={style.fontWeightBold} align=\"center\" marginBottom=\"32px\">\n                    Contact form\n                  </Typography>\n                  \n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper marginRight={2}>\n                      <FormLabel label=\"First name\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"first_name\"\n                        placeholder=\"First name\"\n                        error={Boolean(touched.first_name && errors.first_name)}\n                        helperText={touched.first_name && errors.first_name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.first_name}\n                      />\n                    </FormControlWrapper>\n                    <FormControlWrapper marginLeft={2}>\n                        <FormLabel label=\"Last name\" required />\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          margin=\"dense\"\n                          name=\"last_name\"\n                          placeholder=\"Last name\"\n                          error={Boolean(touched.last_name && errors.last_name)}\n                          helperText={touched.last_name && errors.last_name}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.last_name}\n                        />\n                      </FormControlWrapper>\n                  </Box>\n\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Email\" required />\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        margin=\"dense\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        error={Boolean(touched.email && errors.email)}\n                        helperText={touched.email && errors.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.email}\n                      />\n                    </FormControlWrapper>\n                  </Box>\n\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Subject\" required />\n                      {/* <TextField\n                          fullWidth\n                          size=\"small\"\n                          margin=\"dense\"\n                          name=\"content\"\n                          placeholder=\"Subject\"\n                          error={Boolean(touched.content && errors.content)}\n                          helperText={touched.content && errors.content}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.content}\n                        /> */}\n                      {\n                        subjects ? <Select\n                        value={subject}\n                        onChange={(event) => {\n                          setSubject(event.target.value);\n                        }}\n                        fullWidth\n                        input={<BootstrapInput />}\n                      >\n                        {subjects\n                          ? subjects.map((x) => {\n                              return <MenuItem value={x} key={x.id}>{x.value}</MenuItem>;\n                            })\n                          : ''}\n                      </Select> : ''\n                      }\n                    </FormControlWrapper>\n                  </Box>\n                  <Box sx={{ display: 'flex' }}>\n                    <FormControlWrapper>\n                      <FormLabel label=\"Message\" required />\n                      <TextareaAutosize\n                        minRows={5}\n                        style={style.textarea}\n                        placeholder=\"Message\"\n                        name=\"message\"\n                        error={Boolean(touched.message && errors.message)}\n                        helperText={touched.message && errors.message}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.message}\n                      />\n                    </FormControlWrapper>\n                  </Box>\n\n                  <Box mt={4} textAlign=\"center\">\n                    <LoadingButton variant=\"contained\" sx={{ width: '50%' }} type=\"submit\" loading={isSubmitting}>\n                      SUBMIT\n                    </LoadingButton>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </ContactBox>\n        </Grid>\n      </Grid>\n\n      <Alert open={open} setOpen={ () => {setOpen(false)}} message={alertMessage} error={alertError} />\n    </Page>\n  );\n};\n\nexport default LoginView;\n"],"names":["style","modal","position","top","left","transform","width","bgcolor","p","borderRadius","open","setOpen","message","error","redirect","sx","id","variant","component","textAlign","display","alignItems","justifyContent","mb","mt","src","require","alt","marginRight","height","type","onClick","history","children","marginLeft","ml","mr","label","required","marginBottom","undefined","fontWeight","color","title","rest","ContactBox","styled","Box","css","fontWeightBold","textarea","marginTop","backgroundColor","border","fontSize","padding","fontFamily","join","borderColor","boxShadow","resize","BootstrapInput","InputBase","theme","spacing","palette","background","paper","transition","transitions","create","useState","subject","setSubject","subjects","setSubjects","alertError","setAlertError","alertMessage","setAlertMessage","useEffect","getSubject","API","response","newVal","data","map","x","value","content","lang_code","err","console","log","container","item","xs","flexDirection","enableReinitialize","initialValues","first_name","last_name","email","validationSchema","Yup","shape","onSubmit","values","setSubmitting","setFieldValue","params","support_id","headers","status","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","align","fullWidth","size","margin","name","placeholder","Boolean","helperText","onBlur","onChange","event","target","input","minRows","loading"],"sourceRoot":""}