{"version":3,"file":"static/js/42.0415dd74.chunk.js","mappings":"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","sources":["components/FormLabel.js","components/Page.js","views/auth/LoginView/index.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst FormLabel = ({ label, required, marginBottom }) => {\n  return (\n    <Typography marginBottom={marginBottom !== undefined ? marginBottom : 1} fontWeight={500}>\n      {label}&nbsp;\n      {required && (\n        <Typography component=\"span\" sx={{ color: 'red' }}>\n          *\n        </Typography>\n      )}\n    </Typography>\n  );\n};\n\nexport default FormLabel;\n","import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ title = '', children, ...rest }) => {\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useState } from 'react';\nimport { Grid, TextField, Typography, Box, Link, InputAdornment, IconButton, Checkbox, FormControlLabel, Card, useTheme } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { VisibilityOutlined, VisibilityOffOutlined } from '@mui/icons-material';\nimport { styled, css } from '@mui/material/styles';\nimport FormLabel from 'src/components/FormLabel';\nimport Logo from 'src/components/Logo';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'src/store';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { login } from 'src/store/slices/auth';\nimport useAuth from 'src/hooks/useAuth';\nimport Page from 'src/components/Page';\nimport _ from 'lodash';\n\nconst LoginBox = styled(Card)(({theme}) => ({\n  width: '75%',\n  maxWidth: '515px',\n  background: theme.palette.background.paper,\n  margin: '3rem 0',\n  padding: '4rem 4rem',\n  borderRadius: '0.5rem'\n}))\n\nconst LoginView = () => {\n  const theme = useTheme();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const system = location.pathname.split('/')[1];\n\n  if (isAuthenticated !== null && isAuthenticated === true) {\n    const returnUrl = new URLSearchParams(location.search).get('returnUrl');\n    return returnUrl ? <Redirect to={returnUrl} /> : <Redirect to={`/${system}`} />;\n  }\n\n  const getTargetSiteName = () => {\n    switch (system) {\n      case 'enterprise':\n        return 'Enterprise Portal';\n      default:\n        return _.startCase(system) + ' Website';\n    }\n  };\n\n  return (\n    <Page title=\"Login\">\n      <Grid container sx={{ height: '100vh' }}>\n        <Grid item xs={12} sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n          <LoginBox>\n            <Formik\n              initialValues={{\n                userName: '',\n                password: ''\n              }}\n              validationSchema={Yup.object().shape({\n                userName: Yup.string().required('User name is required'),\n                password: Yup.string().required('Password is required')\n              })}\n              onSubmit={(values, { setSubmitting }) => {\n                dispatch(login(values.userName, values.password)).then(() => {\n                  setSubmitting(false);\n                });\n              }}\n            >\n              {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form onSubmit={handleSubmit}>\n                  <Logo />\n\n                  <Typography mt={2} mb={5}>\n                    Welcome back! Please login to{' '}\n                    <Typography component=\"span\" fontWeight=\"bold\">\n                      {getTargetSiteName()}\n                    </Typography>\n                  </Typography>\n\n                  <Box>\n                    <FormLabel label=\"User name\" />\n                    <TextField\n                      size=\"small\"\n                      placeholder=\"Enter username\"\n                      fullWidth\n                      name=\"userName\"\n                      error={Boolean(touched.userName && errors.userName)}\n                      helperText={touched.userName && errors.userName}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.userName}\n                    />\n                  </Box>\n\n                  <Box mt={2}>\n                    <FormLabel label=\"Password\" />\n                    <TextField\n                      size=\"small\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Enter your password\"\n                      fullWidth\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton onClick={() => setShowPassword((showPassword) => !showPassword)}>\n                              {showPassword ? <VisibilityOffOutlined /> : <VisibilityOutlined />}\n                            </IconButton>\n                          </InputAdornment>\n                        )\n                      }}\n                      name=\"password\"\n                      error={Boolean(touched.password && errors.password)}\n                      helperText={touched.password && errors.password}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.password}\n                    />\n                  </Box>\n\n                  <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n                    <FormControlLabel value=\"end\" control={<Checkbox />} label=\"Keep me logged in\" labelPlacement=\"end\"></FormControlLabel>\n                    <Link href=\"#\">Forgot your password?</Link>\n                  </Box>\n\n                  <Box mt={4} textAlign=\"center\">\n                    <LoadingButton variant=\"contained\" sx={{ width: '50%' }} type=\"submit\" loading={isSubmitting}>\n                      Login\n                    </LoadingButton>\n                  </Box>\n\n                  <Box mt={1.5} textAlign=\"center\">\n                    <Typography component=\"span\">Don't have an account? </Typography>\n                    <Link href={'/' + system + '/register'}>Sign up</Link>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </LoginBox>\n          <Box mb={6}>\n            <Link mr={2} underline=\"none\" href=\"#\">\n              Privacy Policy\n            </Link>\n            &#9679;\n            <Link ml={2} underline=\"none\" href=\"#\">\n              Term & Conditions\n            </Link>\n          </Box>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n};\n\nexport default LoginView;\n"],"names":["label","required","marginBottom","undefined","fontWeight","component","sx","color","title","children","rest","LoginBox","styled","Card","width","maxWidth","background","theme","palette","paper","margin","padding","borderRadius","useTheme","location","useLocation","dispatch","useDispatch","isAuthenticated","useAuth","useState","showPassword","setShowPassword","system","pathname","split","returnUrl","URLSearchParams","search","get","to","container","height","item","xs","display","flexDirection","justifyContent","alignItems","initialValues","userName","password","validationSchema","Yup","shape","onSubmit","values","setSubmitting","login","then","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mt","mb","_","size","placeholder","fullWidth","name","error","Boolean","helperText","onBlur","onChange","value","type","InputProps","endAdornment","position","onClick","control","labelPlacement","href","textAlign","variant","loading","mr","underline","ml"],"sourceRoot":""}